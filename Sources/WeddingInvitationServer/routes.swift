// Sources/WeddingInvitationServer/routes.swift
@preconcurrency import Fluent
@preconcurrency import Vapor

// üèóÔ∏è API ÏùëÎãµÏùÑ ÏúÑÌïú Íµ¨Ï°∞Ï≤¥Îì§ (Ïù¥Î¶Ñ Î≥ÄÍ≤Ω)
struct InvitationAPIResponse: Content {
    let groupName: String
    let groupType: String
    let groomName: String
    let brideName: String
    let weddingDate: String
    let weddingLocation: String
    let greetingMessage: String
    let ceremonyProgram: String
    let accountInfo: [String]
    let features: InvitationFeatures
}

struct InvitationFeatures: Content {
    let showRsvpForm: Bool
    let showAccountInfo: Bool
    let showShareButton: Bool
    let showVenueInfo: Bool
    let showPhotoGallery: Bool
    let showCeremonyProgram: Bool
}

// ÎùºÏö∞Ìä∏ ÏÑ§Ï†ï Ìï®Ïàò
func routes(_ app: Application) throws {
    
    // ‚úÖ Ï∂îÍ∞Ä: ÏÑúÎ≤Ñ ÏãúÏûë Ïãú ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ ÏûêÎèô ÏÉùÏÑ±
    app.get("setup-test-data") { req async throws -> String in
        // wedding123 Í∑∏Î£πÏù¥ Ïù¥ÎØ∏ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏
        let existingGroup = try await InvitationGroup.query(on: req.db)
            .filter(\.$uniqueCode == "wedding123")
            .first()
        
        if existingGroup == nil {
            // ÏóÜÏúºÎ©¥ ÏÉàÎ°ú ÏÉùÏÑ±
            let testGroup = InvitationGroup()
            testGroup.groupName = "Í≤∞ÌòºÏãù Ï¥àÎåÄ Í∑∏Î£π"
            testGroup.groupType = GroupType.weddingGuest.rawValue
            testGroup.uniqueCode = "wedding123"
            
            try await testGroup.save(on: req.db)
            return "‚úÖ wedding123 Í∑∏Î£πÏù¥ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§Ïóê ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§!"
        } else {
            return "‚úÖ wedding123 Í∑∏Î£πÏù¥ Ïù¥ÎØ∏ Ï°¥Ïû¨Ìï©ÎãàÎã§!"
        }
    }
    
    // Í∏∞Ï°¥ ÏΩîÎìúÎì§...
    
    // Í∏∞Î≥∏ Î£®Ìä∏ - ÏÑúÎ≤Ñ ÏÉÅÌÉú ÌôïÏù∏Ïö©
    app.get { req async in
        return "Wedding Invitation Server is running! üíç"
    }
    
    // ‚úÖ RsvpController Îì±Î°ù ÏïÑÎûòÏóê Ï∂îÍ∞Ä
    try app.register(collection: RsvpController())
    // AdminController Îì±Î°ù
    try app.register(collection: AdminController())
    // InvitationController Îì±Î°ù - ÎàÑÎùΩÎêú Î∂ÄÎ∂Ñ Ï∂îÍ∞Ä
    try app.register(collection: InvitationController())
    
    // API Í∑∏Î£π ÏÉùÏÑ± (/api/...)
    let api = app.grouped("api")
    
    // 4. Î™®Îì† Í∑∏Î£π Ï°∞Ìöå API (Í¥ÄÎ¶¨ÏûêÏö©)
    // GET /api/groups
    api.get("groups") { req async throws -> Response in
        let jsonString = """
        [
            {
                "id": "1",
                "groupName": "Í≤∞ÌòºÏãù Ï¥àÎåÄ Í∑∏Î£π",
                "groupType": "WEDDING_GUEST",
                "uniqueCode": "wedding123",
                "createdAt": "2025-01-01T00:00:00Z"
            },
            {
                "id": "2",
                "groupName": "Î∂ÄÎ™®Îãò Í∑∏Î£π",
                "groupType": "PARENTS_GUEST",
                "uniqueCode": "parent456",
                "createdAt": "2025-01-01T00:00:00Z"
            },
            {
                "id": "3",
                "groupName": "ÌöåÏÇ¨ Í∑∏Î£π",
                "groupType": "COMPANY_GUEST",
                "uniqueCode": "company789",
                "createdAt": "2025-01-01T00:00:00Z"
            }
        ]
        """
        
        let response = Response(
            status: .ok,
            headers: HTTPHeaders([("Content-Type", "application/json")]),
            body: .init(string: jsonString)
        )
        return response
    }
}
