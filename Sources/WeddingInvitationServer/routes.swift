// Sources/WeddingInvitationServer/routes.swift
@preconcurrency import Fluent
@preconcurrency import Vapor

// ÎùºÏö∞Ìä∏ ÏÑ§Ï†ï Ìï®Ïàò
func routes(_ app: Application) throws {
    
    // Í∏∞Î≥∏ Î£®Ìä∏ - ÏÑúÎ≤Ñ ÏÉÅÌÉú ÌôïÏù∏Ïö©
    app.get { req async in
        return "Wedding Invitation Server is running! üíç"
    }
    
    // API Í∑∏Î£π ÏÉùÏÑ± (/api/...)
    let api = app.grouped("api")
    
    // 1. Ï¥àÎåÄÏû• Ï†ïÎ≥¥ Ï°∞Ìöå API
    // GET /api/invitation/:uniqueCode
    api.get("invitation", ":uniqueCode") { req async throws -> Response in
        guard let uniqueCode = req.parameters.get("uniqueCode") else {
            throw Abort(.badRequest, reason: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ Ï¥àÎåÄ ÏΩîÎìúÏûÖÎãàÎã§.")
        }
        
        // JSON Î¨∏ÏûêÏó¥Î°ú ÏßÅÏ†ë ÏùëÎãµ ÏÉùÏÑ±
        let jsonString = """
        {
            "groupName": "Í≤∞ÌòºÏãù Ï¥àÎåÄ Í∑∏Î£π",
            "groupType": "WEDDING_GUEST",
            "groomName": "ÍπÄÏã†Îûë",
            "brideName": "Ïù¥Ïã†Î∂Ä",
            "weddingDate": "2025-10-25T17:00:00Z",
            "weddingLocation": "ÏÑúÏö∏ Í∞ïÎÇ®Íµ¨ Ïõ®Îî©ÌôÄ",
            "greetingMessage": "Ï†ÄÌù¨ Îëê ÏÇ¨Îûå, ÏÉàÎ°úÏö¥ ÏãúÏûëÏùÑ Ìï®Íªò Ï∂ïÎ≥µÌï¥Ï£ºÏÑ∏Ïöî.",
            "ceremonyProgram": "1Î∂Ä: ÏòàÏãù, 2Î∂Ä: ÌîºÎ°úÏó∞",
            "accountInfo": ["Ïã†ÌïúÏùÄÌñâ 110-xxx-xxxxxx (Ïã†Îûë)", "Ïπ¥Ïπ¥Ïò§Î±ÖÌÅ¨ 3333-xx-xxxxxxx (Ïã†Î∂Ä)"],
            "features": {
                "showRsvpForm": true,
                "showAccountInfo": false,
                "showShareButton": false,
                "showVenueInfo": true,
                "showPhotoGallery": true,
                "showCeremonyProgram": true
            }
        }
        """
        
        let response = Response(
            status: .ok,
            headers: HTTPHeaders([("Content-Type", "application/json")]),
            body: .init(string: jsonString)
        )
        return response
    }
    
    // 2. Ï∞∏ÏÑù ÏùëÎãµ Ï†úÏ∂ú API
    // POST /api/invitation/:uniqueCode/rsvp
    api.post("invitation", ":uniqueCode", "rsvp") { req async throws -> Response in
        guard let uniqueCode = req.parameters.get("uniqueCode") else {
            throw Abort(.badRequest, reason: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ Ï¥àÎåÄ ÏΩîÎìúÏûÖÎãàÎã§.")
        }
        
        let jsonString = """
        {
            "success": true,
            "message": "Ï∞∏ÏÑù ÏùëÎãµÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Îì±Î°ùÎêòÏóàÏäµÎãàÎã§."
        }
        """
        
        let response = Response(
            status: .ok,
            headers: HTTPHeaders([("Content-Type", "application/json")]),
            body: .init(string: jsonString)
        )
        return response
    }
    
    // 3. Í¥ÄÎ¶¨Ïûê Î°úÍ∑∏Ïù∏ API
    // POST /api/admin/login
    api.post("admin", "login") { req async throws -> Response in
        // ÏöîÏ≤≠ Î≥∏Î¨∏ÏùÑ Î¨∏ÏûêÏó¥Î°ú ÏùΩÏñ¥ÏÑú Í∞ÑÎã®Ìûà ÌôïÏù∏
        let bodyString = req.body.string ?? ""
        
        // Í∞ÑÎã®Ìïú Ïù∏Ï¶ù ÌôïÏù∏ (usernameÍ≥º password Ìè¨Ìï® Ïó¨Î∂Ä)
        if bodyString.contains("admin") && bodyString.contains("test123") {
            let jsonString = """
            {
                "success": true,
                "token": "temporary-jwt-token",
                "message": "Î°úÍ∑∏Ïù∏Ïóê ÏÑ±Í≥µÌñàÏäµÎãàÎã§."
            }
            """
            
            let response = Response(
                status: .ok,
                headers: HTTPHeaders([("Content-Type", "application/json")]),
                body: .init(string: jsonString)
            )
            return response
        } else {
            throw Abort(.unauthorized, reason: "ÏûòÎ™ªÎêú ÏÇ¨Ïö©ÏûêÎ™Ö ÎòêÎäî ÎπÑÎ∞ÄÎ≤àÌò∏ÏûÖÎãàÎã§.")
        }
    }
    
    // 4. Î™®Îì† Í∑∏Î£π Ï°∞Ìöå API (Í¥ÄÎ¶¨ÏûêÏö©)
    // GET /api/groups
    api.get("groups") { req async throws -> Response in
        let jsonString = """
        [
            {
                "id": "1",
                "groupName": "Í≤∞ÌòºÏãù Ï¥àÎåÄ Í∑∏Î£π",
                "groupType": "WEDDING_GUEST",
                "uniqueCode": "wedding123",
                "createdAt": "2025-01-01T00:00:00Z"
            },
            {
                "id": "2",
                "groupName": "Î∂ÄÎ™®Îãò Í∑∏Î£π",
                "groupType": "PARENTS_GUEST",
                "uniqueCode": "parent456",
                "createdAt": "2025-01-01T00:00:00Z"
            },
            {
                "id": "3",
                "groupName": "ÌöåÏÇ¨ Í∑∏Î£π",
                "groupType": "COMPANY_GUEST",
                "uniqueCode": "company789",
                "createdAt": "2025-01-01T00:00:00Z"
            }
        ]
        """
        
        let response = Response(
            status: .ok,
            headers: HTTPHeaders([("Content-Type", "application/json")]),
            body: .init(string: jsonString)
        )
        return response
    }
}
